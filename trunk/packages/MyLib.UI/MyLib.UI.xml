<?xml version="1.0"?>
<doc>
<assembly>
<name>
MyLib.UI
</name>
</assembly>
<members>
<member name="M:MyLib.UI.ObjectComparer.#ctor(MyLib.UI.MyGridColumnType,System.Boolean)">
	<summary>
 构造对象比较器。
 </summary>
	<param name="vType">值类型。</param>
	<param name="nullIsMax">null值是否作为最大值。</param>
	<remarks></remarks>
</member><member name="M:MyLib.UI.ObjectComparer.Compare(System.Object,System.Object)">
	<summary>
 执行比较
 </summary>
	<param name="x"></param>
	<param name="y"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:MyLib.UI.ObjectComparer">
	<summary>
 对象比较器。
 </summary>
	<remarks></remarks>
</member><member name="T:MyLib.UI.MyGridDataTableChangedArgs">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridDataTableDisplayValueNeededArgs.#ctor(MyLib.UI.MyGridDataTable,System.Int32,System.String,System.Object)">
	<summary>
	</summary>
	<param name="table"></param>
	<param name="rowIndex"></param>
	<param name="key"></param>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridDataTableDisplayValueNeededArgs.GetValue(System.String)">
	<summary>
	</summary>
	<param name="key"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:MyLib.UI.MyGridDataTableDisplayValueNeededArgs">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridDataTableSelectedRowChangedArgs.GetValue(System.Int32,System.String)">
	<summary>
	</summary>
	<param name="rowIndex"></param>
	<param name="key"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:MyLib.UI.MyGridDataTableSelectedRowChangedArgs">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:MyLib.UI.MyGridViewBinding.View">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MyLib.UI.MyGridViewBinding.Columns">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MyLib.UI.MyGridViewBinding.DataTable">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridViewBinding.InvalidateView">
	<summary>
 刷新关联的GridView控件
 </summary>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridViewBinding.GetSelectedValues``1(System.String)">
	<summary>
 获取所有选中项的指定字段的值。
 </summary>
	<typeparam name="TValue">返回值的类型。</typeparam>
	<param name="key">字段名。</param>
	<returns>所有选中项的指定字段的值。</returns>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridViewBinding.GetCellValue(System.Int32,System.String)">
	<summary>
 获取指定单元格的值。
 </summary>
	<param name="rowIndex">行号。</param>
	<param name="key">字段名。</param>
	<returns>单元格的值。</returns>
	<remarks></remarks>
</member><member name="F:MyLib.UI.MyGridColumnType.Text">
	<summary>
 文本
 </summary>
</member><member name="F:MyLib.UI.MyGridColumnType.Number">
	<summary>
  整数(64位)
 </summary>
</member><member name="F:MyLib.UI.MyGridColumnType.Money">
	<summary>
 金额, 保留两位小数
 </summary>
</member><member name="F:MyLib.UI.MyGridColumnType.IntMoney">
	<summary>
 整数金额, 不保留小数, 也不显示小数点, 小数部分直接舍去
 </summary>
</member><member name="F:MyLib.UI.MyGridColumnType.Percent">
	<summary>
 百分比, 保留两位小数, 0.3516 将被格式化为 35.16%
 </summary>
</member><member name="F:MyLib.UI.MyGridColumnType.Date">
	<summary>
 日期, 格式为yyyy.MM.dd
 </summary>
</member><member name="F:MyLib.UI.MyGridColumnType.DateTime">
	<summary>
 日期和时间, 格式为yyyy.MM.dd HH:mm:ss
 </summary>
</member><member name="F:MyLib.UI.MyGridColumnType.Boolean">
	<summary>
 是否
 </summary>
</member><member name="F:MyLib.UI.MyGridColumnType.LookUp">
	<summary>
 查找表的结果, 根据值在指定的查找表中查找结果
 </summary>
</member><member name="T:MyLib.UI.MyGridColumnType">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="F:MyLib.UI.MyGridColumnSortOrder.Ascending">
	<summary>
 升序。
 </summary>
</member><member name="F:MyLib.UI.MyGridColumnSortOrder.Descending">
	<summary>
 降序。
 </summary>
</member><member name="T:MyLib.UI.MyGridColumnSortOrder">
	<summary>
 排序方式。
 </summary>
</member><member name="M:MyLib.UI.MyGridColumn.#ctor(System.String,System.String,MyLib.UI.MyGridColumnType,System.Int32,System.Boolean,System.Boolean)">
	<summary>
	</summary>
	<param name="dataKey"></param>
	<param name="title"></param>
	<param name="type"></param>
	<param name="width"></param>
	<param name="frozen"></param>
	<param name="visible"></param>
</member><member name="T:MyLib.UI.MyGridColumn">
	<summary>
 数据列。
 </summary>
</member><member name="M:MyLib.UI.MyGridColumnCollection.AddRange(MyLib.UI.MyGridColumn[])">
	<summary>
	</summary>
	<param name="items"></param>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridColumnCollection.Add(MyLib.UI.MyGridColumn)">
	<summary>
	</summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridColumnCollection.Remove(MyLib.UI.MyGridColumn)">
	<summary>
	</summary>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="T:MyLib.UI.MyGridColumnCollection">
	<summary>
 数据列的集合。
 </summary>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridDataTable.#ctor(MyLib.UI.MyGridColumnCollection)">
	<summary>
	</summary>
	<param name="columns"></param>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridDataTable.#ctor(MyLib.UI.MyGridColumnCollection,System.Collections.Generic.IList{System.Collections.Generic.IList{System.Object}})">
	<summary>
	</summary>
	<param name="columns"></param>
	<param name="data"></param>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridDataTable.ValueEquals(System.Object,System.Object)">
	<summary>
 比较两个对象的字符串形式是否相等，比较时自动去除首尾空格。
 </summary>
	<param name="v1"></param>
	<param name="v2"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridDataTable.RemoveByKey(System.String,System.String)">
	<summary>
 从DataTable中删除指定键的记录。
 </summary>
	<param name="colName">用于判断是否同一条记录的字段名。</param>
	<param name="key">需删除的键。</param>
	<returns>被更新的记录序号(从0开始)，如果没有找到被删除的记录则返回-1。</returns>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridDataTable.UpdateByKey(System.String,System.Collections.Generic.IList{System.Object})">
	<summary>
 更新DataTable中指定键的记录。如果该记录在当前DataTable中不存在则添加到当前DataTable。
 </summary>
	<param name="colName">用于判断是否同一条记录的字段名。</param>
	<param name="item">需要更新的记录。</param>
	<returns>被更新的记录序号(从0开始)</returns>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridDataTable.SortBy(System.String,MyLib.UI.MyGridColumnSortOrder)">
	<summary>
 按照指定的键排序。
 </summary>
	<param name="colName">用于排序的字段名。</param>
	<param name="order">排序方式。</param>
	<remarks></remarks>
</member><member name="M:MyLib.UI.MyGridDataTable.FindKey(System.String)">
	<summary>
 根据字段名称找到列序号。
 </summary>
	<param name="key">字段名称。</param>
	<returns>列序号，如果找不到则返回-1</returns>
	<remarks></remarks>
</member><member name="T:MyLib.UI.MyGridDataTable">
	<summary>
 用于绑定到DataGridView的数据表。
 </summary>
	<remarks></remarks>
</member><member name="T:MyLib.UI.MyGridColumnCollectionEditor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:MyLib.UI.Commons.TryParseEnum``1(System.String,``0@)">
	<summary>
	</summary>
	<typeparam name="T"></typeparam>
	<param name="name"></param>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MyLib.UI.Commons.ValueEquals(System.Object,System.Object)">
	<summary>
 针对两个对象进行值比较。
 </summary>
	<param name="o1"></param>
	<param name="o2"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MyLib.UI.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:MyLib.UI.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:MyLib.UI.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="P:MyLib.UI.MyValidator.SuccessColor">
	<summary>
 验证成功时的背景颜色。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MyLib.UI.MyValidator.RequiredColor">
	<summary>
 必填项的背景颜色。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MyLib.UI.MyValidator.FailureColor">
	<summary>
 验证失败时的背景颜色。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:MyLib.UI.MyValidator">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="T:MyLib.UI.MyValidationMode">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:MyLib.UI.MyValidationCriteria.Required">
	<summary>
 表示该输入项是否必填。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MyLib.UI.MyValidationCriteria.ValidationMode">
	<summary>
 表示校验模式。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MyLib.UI.MyValidationCriteria.Pattern">
	<summary>
 校验的正则表达式样式。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:MyLib.UI.MyValidationCriteria">
	<summary>
	</summary>
	<remarks></remarks>
</member>
</members>
</doc>